<?xml version="1.0" encoding="UTF-8"?>
<Interface name="LearningEngineInterface" version="1.0" module="LearningEngine">
  <Purpose>
    APML-compliant interface for the LearningEngine service adapter that coordinates distinction-based learning components following the External Service Integration Protocol. Provides unified access to mathematical fact repositories, question generation, distractor generation, and distinction management.
  </Purpose>
  
  <ContextBoundary>
    <Scope>Service adapter interface for LearningEngine module integration</Scope>
    <TokenEstimate>8000</TokenEstimate>
    <Dependencies>
      <Dependency name="FactRepositoryInterface" type="component" />
      <Dependency name="QuestionGeneratorInterface" type="component" />
      <Dependency name="DistractorGeneratorInterface" type="component" />
      <Dependency name="DistinctionManagerInterface" type="component" />
      <Dependency name="ContentManagerInterface" type="component" />
    </Dependencies>
  </ContextBoundary>
  
  <Methods>
    <Method name="initializeLearningSession">
      <Purpose>Initialize a new learning session for a user</Purpose>
      <Input name="userId" type="string" description="User identifier" required="true" />
      <Input name="learningPathId" type="string" description="Learning path identifier" required="true" />
      <Input name="sessionConfig" type="SessionConfiguration" description="Session configuration options" required="false" />
      <Output name="sessionId" type="string" description="Unique session identifier" />
      <Output name="initialQuestions" type="Question[]" description="Initial set of questions for the session" />
      <Errors>
        <Error code="LE-001" message="User not found" />
        <Error code="LE-002" message="Learning path not found" />
        <Error code="LE-003" message="Session initialization failed" />
      </Errors>
    </Method>
    
    <Method name="generateQuestion">
      <Purpose>Generate a new question based on user's current learning state</Purpose>
      <Input name="sessionId" type="string" description="Active session identifier" required="true" />
      <Input name="userId" type="string" description="User identifier" required="true" />
      <Input name="questionRequest" type="QuestionRequest" description="Question generation parameters" required="false" />
      <Output name="question" type="Question" description="Generated question with distractors" />
      <Errors>
        <Error code="LE-004" message="Session not found" />
        <Error code="LE-005" message="Question generation failed" />
        <Error code="LE-006" message="No suitable facts available" />
      </Errors>
    </Method>
    
    <Method name="processUserResponse">
      <Purpose>Process user's response and update learning state</Purpose>
      <Input name="sessionId" type="string" description="Active session identifier" required="true" />
      <Input name="questionId" type="string" description="Question identifier" required="true" />
      <Input name="userResponse" type="UserResponse" description="User's response data" required="true" />
      <Output name="feedback" type="ResponseFeedback" description="Feedback on user's response" />
      <Output name="nextQuestion" type="Question" description="Next question if session continues" />
      <Output name="sessionComplete" type="boolean" description="Whether session is complete" />
      <Errors>
        <Error code="LE-007" message="Invalid response data" />
        <Error code="LE-008" message="Question not found" />
        <Error code="LE-009" message="Response processing failed" />
      </Errors>
    </Method>
    
    <Method name="getUserMasteryState">
      <Purpose>Get comprehensive mastery information for a user</Purpose>
      <Input name="userId" type="string" description="User identifier" required="true" />
      <Input name="learningPathId" type="string" description="Learning path filter" required="false" />
      <Output name="masteryData" type="UserMasteryState" description="Complete user mastery information" />
      <Errors>
        <Error code="LE-010" message="User mastery data not found" />
        <Error code="LE-011" message="Data retrieval failed" />
      </Errors>
    </Method>
    
    <Method name="getAvailableFacts">
      <Purpose>Get available mathematical facts for a learning context</Purpose>
      <Input name="learningPathId" type="string" description="Learning path identifier" required="true" />
      <Input name="difficulty" type="number" description="Difficulty level filter" required="false" />
      <Input name="factQuery" type="FactQuery" description="Additional query filters" required="false" />
      <Output name="facts" type="MathematicalFact[]" description="Available mathematical facts" />
      <Errors>
        <Error code="LE-012" message="Learning path not found" />
        <Error code="LE-013" message="No facts match criteria" />
      </Errors>
    </Method>
    
    <Method name="updateContent">
      <Purpose>Update or add mathematical content</Purpose>
      <Input name="factData" type="MathematicalFactInput" description="Fact data to add/update" required="true" />
      <Input name="updateMode" type="string" description="Update mode: create, update, or upsert" required="false" />
      <Output name="factId" type="string" description="Identifier of created/updated fact" />
      <Output name="success" type="boolean" description="Whether operation succeeded" />
      <Errors>
        <Error code="LE-014" message="Invalid fact data" />
        <Error code="LE-015" message="Fact already exists" />
        <Error code="LE-016" message="Content update failed" />
      </Errors>
    </Method>
    
    <Method name="exportLearningData">
      <Purpose>Export user learning data or curriculum content</Purpose>
      <Input name="exportType" type="string" description="Export type: user_data, curriculum, or full" required="true" />
      <Input name="userId" type="string" description="User identifier for user_data export" required="false" />
      <Input name="format" type="string" description="Export format: json, csv, or xml" required="false" />
      <Output name="exportData" type="string" description="Exported data in requested format" />
      <Errors>
        <Error code="LE-017" message="Invalid export type" />
        <Error code="LE-018" message="Export generation failed" />
        <Error code="LE-019" message="Insufficient permissions" />
      </Errors>
    </Method>
  </Methods>
  
  <DataTypes>
    <Type name="SessionConfiguration">
      <Field name="maxQuestions" type="number" description="Maximum questions per session" />
      <Field name="difficultyRange" type="[number, number]" description="Min/max difficulty range" />
      <Field name="focusAreas" type="string[]" description="Specific focus areas for session" />
      <Field name="adaptiveDifficulty" type="boolean" description="Whether to adjust difficulty based on performance" />
    </Type>
    
    <Type name="Question">
      <Field name="id" type="string" description="Unique question identifier" />
      <Field name="factId" type="string" description="Associated mathematical fact ID" />
      <Field name="questionText" type="string" description="The question to display" />
      <Field name="correctAnswer" type="string" description="The correct answer" />
      <Field name="distractors" type="string[]" description="Incorrect answer options" />
      <Field name="boundaryLevel" type="number" description="Distinction boundary level (1-5)" />
      <Field name="difficulty" type="number" description="Question difficulty rating" />
      <Field name="metadata" type="object" description="Additional question metadata" />
    </Type>
    
    <Type name="UserResponse">
      <Field name="questionId" type="string" description="Question identifier" />
      <Field name="selectedAnswer" type="string" description="User's selected answer" />
      <Field name="responseTime" type="number" description="Response time in milliseconds" />
      <Field name="isCorrect" type="boolean" description="Whether response was correct" />
      <Field name="timestamp" type="string" description="ISO timestamp of response" />
    </Type>
    
    <Type name="ResponseFeedback">
      <Field name="isCorrect" type="boolean" description="Whether response was correct" />
      <Field name="correctAnswer" type="string" description="The correct answer" />
      <Field name="explanation" type="string" description="Explanation of the answer" />
      <Field name="encouragement" type="string" description="Encouraging message for user" />
      <Field name="masteryUpdate" type="object" description="Updated mastery information" />
    </Type>
    
    <Type name="UserMasteryState">
      <Field name="userId" type="string" description="User identifier" />
      <Field name="learningPaths" type="object" description="Mastery data by learning path" />
      <Field name="overallProgress" type="number" description="Overall progress percentage" />
      <Field name="strengths" type="string[]" description="Areas of strength" />
      <Field name="improvementAreas" type="string[]" description="Areas needing improvement" />
      <Field name="lastUpdated" type="string" description="ISO timestamp of last update" />
    </Type>
  </DataTypes>
  
  <ValidationCriteria>
    <Criterion id="LE-INT-001" description="Service adapter implements all interface methods">
      All methods defined in this interface must be implemented in the service adapter class
    </Criterion>
    
    <Criterion id="LE-INT-002" description="Error handling follows APML protocol">
      All errors must be properly typed and include appropriate error codes and messages
    </Criterion>
    
    <Criterion id="LE-INT-003" description="Component integration is properly orchestrated">
      Service adapter must coordinate between all LearningEngine components without tight coupling
    </Criterion>
    
    <Criterion id="LE-INT-004" description="Session management is stateful and consistent">
      Learning sessions must maintain consistent state across question generation and response processing
    </Criterion>
    
    <Criterion id="LE-INT-005" description="Data persistence is properly managed">
      User mastery data and learning progress must be persisted and retrievable across sessions
    </Criterion>
    
    <Criterion id="LE-INT-006" description="Content management operations work correctly">
      Adding, updating, and exporting content must work without corrupting existing data
    </Criterion>
    
    <Criterion id="LE-INT-007" description="Performance requirements are met">
      Question generation must complete within 200ms, response processing within 100ms
    </Criterion>
  </ValidationCriteria>
  
  <IntegrationPoints>
    <Integration target="ProgressionSystem.TripleHelixManagerInterface">
      <Purpose>Coordinate learning path progression and tube rotation</Purpose>
      <Method>getUserActiveLearningPath</Method>
      <Method>updateLearningProgress</Method>
    </Integration>
    
    <Integration target="MetricsSystem.SessionMetricsManagerInterface">
      <Purpose>Record learning session metrics and performance data</Purpose>
      <Method>recordQuestionResponse</Method>
      <Method>calculateSessionMetrics</Method>
    </Integration>
    
    <Integration target="UserInterface.PlayerCardInterface">
      <Purpose>Provide questions and process responses from UI components</Purpose>
      <Method>generateQuestion</Method>
      <Method>processUserResponse</Method>
    </Integration>
    
    <Integration target="BackendServices.UserSessionManagerInterface">
      <Purpose>Persist learning data and synchronize user state</Purpose>
      <Method>saveUserProgress</Method>
      <Method>loadUserState</Method>
    </Integration>
  </IntegrationPoints>
  
  <ExternalServiceProtocol>
    <ServiceType>Learning Engine Coordination</ServiceType>
    <Isolation>Service adapter pattern with interface-only dependencies</Isolation>
    <ErrorRecovery>Graceful degradation with offline fallback capabilities</ErrorRecovery>
    <Monitoring>Comprehensive logging of learning session activities and performance metrics</Monitoring>
    <Testing>Component integration tests with mock implementations for isolated testing</Testing>
  </ExternalServiceProtocol>
</Interface>