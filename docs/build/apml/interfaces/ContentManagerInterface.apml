<?xml version="1.0" encoding="UTF-8"?>
<Interface name="ContentManagerInterface" version="1.0.0">
  <Purpose>
    Provide an administrative interface for managing mathematical facts and curriculum content
  </Purpose>
  
  <Description>
    The ContentManagerInterface defines methods for creating, updating, and managing mathematical facts and curriculum content.
    It works with the FactRepositoryInterface to provide higher-level administrative functionality, including curriculum import/export,
    relationship generation, and difficulty calculation.
  </Description>
  
  <Methods>
    <Method name="createFact">
      <Description>Creates a new mathematical fact in the repository</Description>
      <Input name="factInput" type="MathematicalFactInput" required="true" description="Fact data to create" />
      <Output name="fact" type="MathematicalFact" description="The created mathematical fact" />
      <ErrorCases>
        <Error code="INVALID_FACT" description="When the provided fact data is invalid" />
      </ErrorCases>
    </Method>
    
    <Method name="updateFact">
      <Description>Updates an existing mathematical fact in the repository</Description>
      <Input name="factId" type="string" required="true" description="ID of the fact to update" />
      <Input name="factUpdates" type="Partial&lt;MathematicalFactInput&gt;" required="true" description="Fact data updates" />
      <Output name="fact" type="MathematicalFact" description="The updated mathematical fact" />
      <ErrorCases>
        <Error code="FACT_NOT_FOUND" description="When the requested fact doesn't exist" />
        <Error code="INVALID_FACT" description="When the updated fact data is invalid" />
      </ErrorCases>
    </Method>
    
    <Method name="deleteFact">
      <Description>Deletes a mathematical fact from the repository</Description>
      <Input name="factId" type="string" required="true" description="ID of the fact to delete" />
      <Output name="success" type="boolean" description="Whether the deletion was successful" />
      <ErrorCases>
        <Error code="FACT_NOT_FOUND" description="When the requested fact doesn't exist" />
        <Error code="FACT_IN_USE" description="When the fact cannot be deleted because it's referenced by other facts" />
      </ErrorCases>
    </Method>
    
    <Method name="importCurriculum">
      <Description>Imports curriculum content from JSON format</Description>
      <Input name="jsonData" type="string" required="true" description="JSON curriculum data" />
      <Input name="options" type="ImportOptions" required="false" description="Import options" />
      <Output name="result" type="ImportResult" description="Import operation result" />
      <ErrorCases>
        <Error code="INVALID_JSON" description="When JSON data cannot be parsed" />
        <Error code="INVALID_CURRICULUM" description="When curriculum structure is invalid" />
      </ErrorCases>
    </Method>
    
    <Method name="exportCurriculum">
      <Description>Exports curriculum content to JSON format</Description>
      <Input name="curriculumName" type="string" required="true" description="Name for the exported curriculum" />
      <Input name="description" type="string" required="false" description="Description of the curriculum" />
      <Input name="query" type="FactQuery" required="false" description="Optional query to filter facts to export" />
      <Output name="json" type="string" description="JSON curriculum data" />
      <ErrorCases>
        <Error code="EXPORT_ERROR" description="When exporting curriculum fails" />
      </ErrorCases>
    </Method>
    
    <Method name="generateFactRelationships">
      <Description>Automatically generates relationships between facts</Description>
      <Input name="factIds" type="string[]" required="false" description="IDs of facts to process (all if not specified)" />
      <Input name="relationshipTypes" type="string[]" required="false" description="Types of relationships to generate" />
      <Output name="updatedCount" type="number" description="Number of facts updated with new relationships" />
      <ErrorCases>
        <Error code="GENERATION_ERROR" description="When generating relationships fails" />
      </ErrorCases>
    </Method>
    
    <Method name="generateDifficultyRatings">
      <Description>Automatically calculates difficulty ratings for facts</Description>
      <Input name="factIds" type="string[]" required="false" description="IDs of facts to process (all if not specified)" />
      <Input name="algorithm" type="string" required="false" description="Difficulty calculation algorithm to use" />
      <Output name="updatedCount" type="number" description="Number of facts updated with new difficulty ratings" />
      <ErrorCases>
        <Error code="CALCULATION_ERROR" description="When calculating difficulty ratings fails" />
        <Error code="INVALID_ALGORITHM" description="When an unsupported algorithm is specified" />
      </ErrorCases>
    </Method>
    
    <Method name="listCurriculumSets">
      <Description>Lists available curriculum sets</Description>
      <Input name="tags" type="string[]" required="false" description="Filter by tags" />
      <Output name="curriculumSets" type="CurriculumMetadata[]" description="Available curriculum sets" />
      <ErrorCases>
        <Error code="LIST_ERROR" description="When listing curriculum sets fails" />
      </ErrorCases>
    </Method>
    
    <Method name="getCurriculumSet">
      <Description>Gets a specific curriculum set</Description>
      <Input name="curriculumId" type="string" required="true" description="Curriculum identifier" />
      <Output name="curriculum" type="Curriculum" description="The curriculum data" />
      <ErrorCases>
        <Error code="CURRICULUM_NOT_FOUND" description="When the requested curriculum doesn't exist" />
      </ErrorCases>
    </Method>
  </Methods>
  
  <Types>
    <Type name="MathematicalFactInput" description="Input for creating a mathematical fact">
      <Property name="id" type="string" required="false" description="Unique identifier for the fact (auto-generated if not provided)" />
      <Property name="operation" type="string" required="true" description="Mathematical operation (e.g., 'addition', 'multiplication')" />
      <Property name="operands" type="number[]" required="true" description="Operands involved in the fact" />
      <Property name="result" type="number" required="true" description="Result of the operation" />
      <Property name="difficulty" type="number" required="false" description="Inherent difficulty rating (0.0-1.0)" />
      <Property name="relatedFactIds" type="string[]" required="false" description="IDs of related facts" />
      <Property name="tags" type="string[]" required="false" description="Tags for categorization" />
    </Type>
    
    <Type name="CurriculumMetadata" description="Curriculum metadata">
      <Property name="id" type="string" required="true" description="Unique identifier for the curriculum" />
      <Property name="name" type="string" required="true" description="Name of the curriculum" />
      <Property name="description" type="string" required="true" description="Description of the curriculum content" />
      <Property name="version" type="string" required="true" description="Version of the curriculum" />
      <Property name="createdAt" type="string" required="true" description="Creation timestamp (ISO format)" />
      <Property name="updatedAt" type="string" required="true" description="Last update timestamp (ISO format)" />
      <Property name="tags" type="string[]" required="false" description="Tags for categorization" />
    </Type>
    
    <Type name="Curriculum" description="Curriculum with facts">
      <Property name="metadata" type="CurriculumMetadata" required="true" description="Curriculum metadata" />
      <Property name="facts" type="MathematicalFact[]" required="true" description="Mathematical facts in this curriculum" />
    </Type>
    
    <Type name="ImportOptions" description="Import options">
      <Property name="replaceExisting" type="boolean" required="false" description="Whether to replace existing facts" />
      <Property name="validateOnly" type="boolean" required="false" description="Only validate without importing" />
    </Type>
    
    <Type name="ImportResult" description="Import operation result">
      <Property name="success" type="boolean" required="true" description="Whether the import was successful" />
      <Property name="importedCount" type="number" required="true" description="Number of facts imported" />
      <Property name="skippedCount" type="number" required="true" description="Number of facts skipped" />
      <Property name="errorCount" type="number" required="true" description="Number of errors encountered" />
      <Property name="curriculumName" type="string" required="false" description="Name of the imported curriculum" />
      <Property name="errors" type="string[]" required="false" description="Error messages for failed imports" />
      <Property name="message" type="string" required="true" description="Summary message of the import operation" />
    </Type>
    
    <Enum name="RelationshipType" description="Types of relationships between facts">
      <Value name="COMMUTATIVE" description="For operations where order doesn't matter (e.g., 2+3 and 3+2)" />
      <Value name="INVERSE" description="Opposite operations (e.g., 2+3=5 and 5-3=2)" />
      <Value name="ADJACENT" description="Facts with operands that differ by 1 (e.g., 2+3 and 2+4)" />
      <Value name="EQUIVALENT" description="Facts that can be represented in different ways (e.g., 2Ã—3 and 3+3)" />
    </Enum>
    
    <Enum name="DifficultyAlgorithm" description="Difficulty calculation algorithms">
      <Value name="DEFAULT" description="Simple calculation based on operation, operand size, and special cases" />
      <Value name="COGNITIVE_LOAD" description="More sophisticated algorithm that considers additional factors like pattern recognition" />
    </Enum>
    
    <Enum name="ContentManagerErrorCode" description="Error codes used by the ContentManager">
      <Value name="INVALID_FACT" description="When fact data is invalid" />
      <Value name="FACT_NOT_FOUND" description="When a requested fact doesn't exist" />
      <Value name="FACT_IN_USE" description="When a fact cannot be deleted because it's referenced by other facts" />
      <Value name="INVALID_JSON" description="When JSON data cannot be parsed" />
      <Value name="INVALID_CURRICULUM" description="When curriculum structure is invalid" />
      <Value name="EXPORT_ERROR" description="When exporting curriculum fails" />
      <Value name="GENERATION_ERROR" description="When generating relationships fails" />
      <Value name="CALCULATION_ERROR" description="When calculating difficulty ratings fails" />
      <Value name="INVALID_ALGORITHM" description="When an unsupported algorithm is specified" />
      <Value name="LIST_ERROR" description="When listing curriculum sets fails" />
      <Value name="CURRICULUM_NOT_FOUND" description="When a requested curriculum doesn't exist" />
    </Enum>
  </Types>
  
  <Dependencies>
    <Dependency interface="FactRepositoryInterface" description="Used for storing and retrieving mathematical facts" />
  </Dependencies>
  
  <ValidationCriteria>
    <Criterion id="CM-001" description="The ContentManager must correctly create, update, and delete mathematical facts">
      <TestCase description="Creating a fact with valid data should succeed" />
      <TestCase description="Creating a fact with invalid data should fail with appropriate error" />
      <TestCase description="Updating a fact with valid data should succeed" />
      <TestCase description="Updating a non-existent fact should fail with appropriate error" />
      <TestCase description="Deleting a fact should succeed" />
      <TestCase description="Deleting a non-existent fact should fail with appropriate error" />
    </Criterion>
    
    <Criterion id="CM-002" description="The ContentManager must correctly import and export curriculum content">
      <TestCase description="Importing valid curriculum data should succeed" />
      <TestCase description="Importing invalid curriculum data should fail with appropriate error" />
      <TestCase description="Exporting curriculum should produce valid JSON" />
      <TestCase description="Exported curriculum should be importable without errors" />
    </Criterion>
    
    <Criterion id="CM-003" description="The ContentManager must correctly generate relationships between facts">
      <TestCase description="Commutative relationships should be correctly generated" />
      <TestCase description="Inverse relationships should be correctly generated" />
      <TestCase description="Adjacent relationships should be correctly generated" />
      <TestCase description="Equivalent relationships should be correctly generated" />
    </Criterion>
    
    <Criterion id="CM-004" description="The ContentManager must correctly calculate difficulty ratings">
      <TestCase description="Default algorithm should produce consistent ratings" />
      <TestCase description="Cognitive load algorithm should produce ratings considering multiple factors" />
      <TestCase description="Difficulty ratings should be between 0.0 and 1.0" />
    </Criterion>
    
    <Criterion id="CM-005" description="The ContentManager must correctly manage curriculum sets">
      <TestCase description="Listing curriculum sets should return all available sets" />
      <TestCase description="Filtering curriculum sets by tags should work correctly" />
      <TestCase description="Getting a specific curriculum set should return correct data" />
      <TestCase description="Getting a non-existent curriculum set should fail with appropriate error" />
    </Criterion>
  </ValidationCriteria>
  
  <SecurityConsiderations>
    <Consideration description="The ContentManager is designed for administrative use only and should not be exposed to regular users">
      <Recommendation>Implement access control to restrict ContentManager operations to authenticated administrators</Recommendation>
      <Recommendation>Validate all input data to prevent injection attacks</Recommendation>
      <Recommendation>Implement rate limiting for API endpoints that expose ContentManager functionality</Recommendation>
    </Consideration>
    <Consideration description="The ContentManager has access to modify core application data">
      <Recommendation>Log all administrative actions for audit purposes</Recommendation>
      <Recommendation>Implement a backup system for curriculum data</Recommendation>
      <Recommendation>Consider a review process for curriculum changes in production environments</Recommendation>
    </Consideration>
  </SecurityConsiderations>
</Interface>