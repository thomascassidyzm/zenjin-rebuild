<?xml version="1.0" encoding="UTF-8"?>
<Interface name="OfflineStorageInterface" version="1.1.0" module="OfflineSupport">
  <Purpose>
    Defines the contract for the OfflineStorage component that manages local data storage for offline usage.
  </Purpose>
  
  <DataStructures>
    <Structure name="StorageItem">
      <Field name="key" type="string" required="true" description="Unique key for the storage item" />
      <Field name="value" type="any" required="true" description="Value of the storage item" />
      <Field name="timestamp" type="string" required="true" description="ISO date string of last modification" />
      <Field name="syncStatus" type="string" required="true" description="Synchronization status ('synced', 'pending', 'conflict')" />
      <Field name="expirationDate" type="string" required="false" description="ISO date string of expiration" />
    </Structure>
    
    <Structure name="StorageStats">
      <Field name="totalItems" type="number" required="true" description="Total number of items in storage" />
      <Field name="totalSize" type="number" required="true" description="Total size in bytes" />
      <Field name="syncedItems" type="number" required="true" description="Number of synced items" />
      <Field name="pendingItems" type="number" required="true" description="Number of pending items" />
      <Field name="conflictItems" type="number" required="true" description="Number of items with conflicts" />
      <Field name="lastUpdated" type="string" required="true" description="ISO date string of last update" />
    </Structure>
  </DataStructures>
  
  <Methods>
    <Method name="getItem">
      <Description>Gets an item from storage by key</Description>
      <Input name="userId" type="string" required="true" description="User identifier" />
      <Input name="key" type="string" required="true" description="Storage item key" />
      <Output name="item" type="StorageItem" description="The storage item" />
      <Errors>
        <Error code="USER_NOT_FOUND" description="The specified user was not found" />
        <Error code="ITEM_NOT_FOUND" description="The specified item was not found" />
      </Errors>
      <Async>false</Async>
    </Method>
    
    <Method name="setItem">
      <Description>Sets an item in storage</Description>
      <Input name="userId" type="string" required="true" description="User identifier" />
      <Input name="key" type="string" required="true" description="Storage item key" />
      <Input name="value" type="any" required="true" description="Storage item value" />
      <Input name="options" type="object" required="false" description="Storage options">
        <Field name="syncStatus" type="string" required="false" description="Initial sync status" defaultValue="pending" />
        <Field name="expirationDate" type="string" required="false" description="ISO date string of expiration" />
      </Input>
      <Output name="success" type="boolean" description="Whether the item was successfully set" />
      <Errors>
        <Error code="USER_NOT_FOUND" description="The specified user was not found" />
        <Error code="STORAGE_ERROR" description="Error storing the item" />
        <Error code="QUOTA_EXCEEDED" description="Storage quota exceeded" />
      </Errors>
      <Async>false</Async>
    </Method>
    
    <Method name="removeItem">
      <Description>Removes an item from storage</Description>
      <Input name="userId" type="string" required="true" description="User identifier" />
      <Input name="key" type="string" required="true" description="Storage item key" />
      <Output name="success" type="boolean" description="Whether the item was successfully removed" />
      <Errors>
        <Error code="USER_NOT_FOUND" description="The specified user was not found" />
        <Error code="ITEM_NOT_FOUND" description="The specified item was not found" />
        <Error code="REMOVAL_ERROR" description="Error removing the item" />
      </Errors>
      <Async>false</Async>
    </Method>
    
    <Method name="getStorageStats">
      <Description>Gets storage statistics for a user</Description>
      <Input name="userId" type="string" required="true" description="User identifier" />
      <Output name="stats" type="StorageStats" description="Storage statistics" />
      <Errors>
        <Error code="USER_NOT_FOUND" description="The specified user was not found" />
      </Errors>
      <Async>false</Async>
    </Method>
    
    <Method name="clearExpiredItems">
      <Description>Clears expired items from storage</Description>
      <Input name="userId" type="string" required="true" description="User identifier" />
      <Output name="clearedCount" type="number" description="Number of items cleared" />
      <Errors>
        <Error code="USER_NOT_FOUND" description="The specified user was not found" />
        <Error code="CLEAR_ERROR" description="Error clearing expired items" />
      </Errors>
      <Async>false</Async>
    </Method>
    
    <Method name="updateSyncStatus">
      <Description>Updates the synchronization status of an item</Description>
      <Input name="userId" type="string" required="true" description="User identifier" />
      <Input name="key" type="string" required="true" description="Storage item key" />
      <Input name="syncStatus" type="string" required="true" description="New synchronization status" />
      <Output name="success" type="boolean" description="Whether the status was successfully updated" />
      <Errors>
        <Error code="USER_NOT_FOUND" description="The specified user was not found" />
        <Error code="ITEM_NOT_FOUND" description="The specified item was not found" />
        <Error code="INVALID_STATUS" description="The specified status is invalid" />
      </Errors>
      <Async>false</Async>
    </Method>
  </Methods>
  
  <Dependencies>
    <!-- No external dependencies -->
  </Dependencies>
  
  <UsageExample>
```typescript
// Example usage of OfflineStorageInterface
import { OfflineStorage } from './components/OfflineStorage';

// Create offline storage
const offlineStorage = new OfflineStorage();

// Store user progress data
offlineStorage.setItem('user123', 'progress:session456', {
  correctAnswers: 18,
  totalQuestions: 20,
  completionTime: 240000
}, {
  syncStatus: 'pending',
  expirationDate: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000).toISOString() // 30 days
});

// Retrieve stored data
const progressData = offlineStorage.getItem('user123', 'progress:session456');
console.log(`Sync status: ${progressData.syncStatus}`);
console.log(`Last modified: ${progressData.timestamp}`);
console.log(`Value: ${JSON.stringify(progressData.value)}`);

// Update sync status after synchronization
offlineStorage.updateSyncStatus('user123', 'progress:session456', 'synced');

// Get storage statistics
const stats = offlineStorage.getStorageStats('user123');
console.log(`Total items: ${stats.totalItems}`);
console.log(`Synced items: ${stats.syncedItems}`);
console.log(`Pending items: ${stats.pendingItems}`);
console.log(`Storage size: ${stats.totalSize} bytes`);

// Clear expired items
const clearedCount = offlineStorage.clearExpiredItems('user123');
console.log(`Cleared ${clearedCount} expired items`);
```
  </UsageExample>
</Interface>
