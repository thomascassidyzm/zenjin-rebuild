<?xml version="1.0" encoding="UTF-8"?>
<Interface name="FactRepositoryInterface" version="1.1.0" module="LearningEngine">
  <Purpose>
    Defines the contract for the FactRepository component that stores and retrieves mathematical facts used in the learning process.
  </Purpose>
  
  <DataStructures>
    <Structure name="MathematicalFact">
      <Field name="id" type="string" required="true" description="Unique identifier for the fact" />
      <Field name="operation" type="string" required="true" description="Mathematical operation (e.g., 'addition', 'multiplication')" />
      <Field name="operands" type="number[]" required="true" description="Operands involved in the fact" />
      <Field name="result" type="number" required="true" description="Result of the operation" />
      <Field name="difficulty" type="number" required="false" description="Inherent difficulty rating (0.0-1.0)" defaultValue="0.5" />
      <Field name="relatedFactIds" type="string[]" required="false" description="IDs of related facts" />
      <Field name="tags" type="string[]" required="false" description="Tags for categorization" />
    </Structure>
    
    <Structure name="FactQuery">
      <Field name="operation" type="string" required="false" description="Filter by operation" />
      <Field name="difficulty" type="object" required="false" description="Filter by difficulty range">
        <Field name="min" type="number" required="false" description="Minimum difficulty" />
        <Field name="max" type="number" required="false" description="Maximum difficulty" />
      </Field>
      <Field name="tags" type="string[]" required="false" description="Filter by tags" />
      <Field name="limit" type="number" required="false" description="Maximum number of results" defaultValue="100" />
      <Field name="offset" type="number" required="false" description="Result offset for pagination" defaultValue="0" />
    </Structure>
  </DataStructures>
  
  <Methods>
    <Method name="getFactById">
      <Description>Gets a mathematical fact by its identifier</Description>
      <Input name="factId" type="string" required="true" description="Fact identifier" />
      <Output name="fact" type="MathematicalFact" description="The mathematical fact" />
      <Errors>
        <Error code="FACT_NOT_FOUND" description="The specified fact was not found" />
      </Errors>
      <Async>false</Async>
    </Method>
    
    <Method name="queryFacts">
      <Description>Queries mathematical facts based on criteria</Description>
      <Input name="query" type="FactQuery" required="true" description="Query criteria" />
      <Output name="facts" type="MathematicalFact[]" description="Array of matching facts" />
      <Errors>
        <Error code="INVALID_QUERY" description="The query is invalid" />
      </Errors>
      <Async>false</Async>
    </Method>
    
    <Method name="getRelatedFacts">
      <Description>Gets facts related to a specific fact</Description>
      <Input name="factId" type="string" required="true" description="Fact identifier" />
      <Input name="limit" type="number" required="false" description="Maximum number of related facts to return" defaultValue="10" />
      <Output name="relatedFacts" type="MathematicalFact[]" description="Array of related facts" />
      <Errors>
        <Error code="FACT_NOT_FOUND" description="The specified fact was not found" />
      </Errors>
      <Async>false</Async>
    </Method>
    
    <Method name="getFactsByOperation">
      <Description>Gets facts for a specific mathematical operation</Description>
      <Input name="operation" type="string" required="true" description="Mathematical operation" />
      <Output name="facts" type="MathematicalFact[]" description="Array of facts for the operation" />
      <Errors>
        <Error code="INVALID_OPERATION" description="The specified operation is invalid" />
      </Errors>
      <Async>false</Async>
    </Method>
    
    <Method name="getFactCount">
      <Description>Gets the total count of facts in the repository</Description>
      <Input name="query" type="FactQuery" required="false" description="Optional query criteria" />
      <Output name="count" type="number" description="Number of facts matching the criteria" />
      <Errors>
        <Error code="INVALID_QUERY" description="The query is invalid" />
      </Errors>
      <Async>false</Async>
    </Method>
  </Methods>
  
  <Dependencies>
    <!-- No external dependencies -->
  </Dependencies>
  
  <UsageExample>
```typescript
// Example usage of FactRepositoryInterface
import { FactRepository } from './components/FactRepository';

// Create fact repository
const factRepository = new FactRepository();

// Get a fact by ID
const fact = factRepository.getFactById('mult-7-8');
console.log(`Fact: ${fact.operands[0]} × ${fact.operands[1]} = ${fact.result}`);

// Query facts by criteria
const multiplicationFacts = factRepository.queryFacts({
  operation: 'multiplication',
  difficulty: { min: 0.3, max: 0.7 },
  limit: 20
});

console.log(`Found ${multiplicationFacts.length} multiplication facts`);

// Get related facts
const relatedFacts = factRepository.getRelatedFacts('mult-7-8');
console.log(`Related facts: ${relatedFacts.length}`);
relatedFacts.forEach(f => {
  console.log(`${f.operands[0]} × ${f.operands[1]} = ${f.result}`);
});

// Get facts by operation
const additionFacts = factRepository.getFactsByOperation('addition');
console.log(`Addition facts: ${additionFacts.length}`);

// Get fact count
const totalFacts = factRepository.getFactCount();
console.log(`Total facts in repository: ${totalFacts}`);
```
  </UsageExample>
</Interface>
