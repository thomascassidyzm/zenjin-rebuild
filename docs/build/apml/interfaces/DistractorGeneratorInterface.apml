<?xml version="1.0" encoding="UTF-8"?>
<Interface name="DistractorGeneratorInterface" version="1.1.0" module="LearningEngine">
  <Purpose>
    Defines the contract for the DistractorGenerator component that generates appropriate distractors based on the boundary level and mathematical fact.
  </Purpose>
  
  <DataStructures>
    <Structure name="DistractorRequest">
      <Field name="factId" type="string" required="true" description="Mathematical fact identifier" />
      <Field name="boundaryLevel" type="number" required="true" description="Boundary level (1-5)" />
      <Field name="correctAnswer" type="string" required="true" description="The correct answer" />
      <Field name="count" type="number" required="false" description="Number of distractors to generate" defaultValue="1" />
    </Structure>
    
    <Structure name="Distractor">
      <Field name="value" type="string" required="true" description="The distractor value" />
      <Field name="boundaryLevel" type="number" required="true" description="The boundary level this distractor targets" />
      <Field name="explanation" type="string" required="false" description="Explanation of why this distractor was chosen" />
      <Field name="difficulty" type="number" required="false" description="Difficulty rating (0.0-1.0)" />
    </Structure>
  </DataStructures>
  
  <Methods>
    <Method name="generateDistractor">
      <Description>Generates a distractor based on the boundary level and mathematical fact</Description>
      <Input name="request" type="DistractorRequest" required="true" description="Distractor generation request" />
      <Output name="distractor" type="Distractor" description="Generated distractor" />
      <Errors>
        <Error code="INVALID_FACT" description="The specified fact is invalid or not found" />
        <Error code="INVALID_BOUNDARY_LEVEL" description="The specified boundary level is invalid" />
        <Error code="GENERATION_FAILED" description="Failed to generate a distractor" />
      </Errors>
      <Async>false</Async>
    </Method>
    
    <Method name="generateMultipleDistractors">
      <Description>Generates multiple distractors based on the boundary level and mathematical fact</Description>
      <Input name="request" type="DistractorRequest" required="true" description="Distractor generation request" />
      <Output name="distractors" type="Distractor[]" description="Array of generated distractors" />
      <Errors>
        <Error code="INVALID_FACT" description="The specified fact is invalid or not found" />
        <Error code="INVALID_BOUNDARY_LEVEL" description="The specified boundary level is invalid" />
        <Error code="GENERATION_FAILED" description="Failed to generate distractors" />
      </Errors>
      <Async>false</Async>
    </Method>
    
    <Method name="getDistractorExplanation">
      <Description>Gets an explanation for why a distractor was chosen</Description>
      <Input name="factId" type="string" required="true" description="Mathematical fact identifier" />
      <Input name="distractor" type="string" required="true" description="The distractor value" />
      <Input name="boundaryLevel" type="number" required="true" description="Boundary level (1-5)" />
      <Output name="explanation" type="string" description="Explanation of why the distractor was chosen" />
      <Errors>
        <Error code="INVALID_FACT" description="The specified fact is invalid or not found" />
        <Error code="INVALID_DISTRACTOR" description="The specified distractor is invalid" />
        <Error code="INVALID_BOUNDARY_LEVEL" description="The specified boundary level is invalid" />
      </Errors>
      <Async>false</Async>
    </Method>
    
    <Method name="validateDistractor">
      <Description>Validates whether a distractor is appropriate for the given boundary level and fact</Description>
      <Input name="factId" type="string" required="true" description="Mathematical fact identifier" />
      <Input name="distractor" type="string" required="true" description="The distractor value" />
      <Input name="boundaryLevel" type="number" required="true" description="Boundary level (1-5)" />
      <Input name="correctAnswer" type="string" required="true" description="The correct answer" />
      <Output name="result" type="object" description="Validation result">
        <Field name="isValid" type="boolean" description="Whether the distractor is valid" />
        <Field name="reason" type="string" description="Reason for validation result" />
      </Output>
      <Errors>
        <Error code="INVALID_FACT" description="The specified fact is invalid or not found" />
        <Error code="INVALID_BOUNDARY_LEVEL" description="The specified boundary level is invalid" />
      </Errors>
      <Async>false</Async>
    </Method>
  </Methods>
  
  <Dependencies>
    <Dependency interface="FactRepositoryInterface" module="LearningEngine" />
    <Dependency interface="DistinctionManagerInterface" module="LearningEngine" />
  </Dependencies>
  
  <UsageExample>
```typescript
// Example usage of DistractorGeneratorInterface
import { DistractorGenerator } from './components/DistractorGenerator';

// Create distractor generator
const distractorGenerator = new DistractorGenerator();

// Generate a distractor for a specific fact and boundary level
const distractor = distractorGenerator.generateDistractor({
  factId: 'mult-7-8',
  boundaryLevel: 5,
  correctAnswer: '56'
});

console.log(`Distractor: ${distractor.value}`);
console.log(`Boundary Level: ${distractor.boundaryLevel}`);
console.log(`Explanation: ${distractor.explanation}`);

// Generate multiple distractors
const distractors = distractorGenerator.generateMultipleDistractors({
  factId: 'mult-7-8',
  boundaryLevel: 5,
  correctAnswer: '56',
  count: 3
});

distractors.forEach((d, index) => {
  console.log(`Distractor ${index + 1}: ${d.value}`);
});

// Get explanation for a specific distractor
const explanation = distractorGenerator.getDistractorExplanation(
  'mult-7-8',
  '54',
  5
);

console.log(`Explanation: ${explanation}`);

// Validate a distractor
const validationResult = distractorGenerator.validateDistractor(
  'mult-7-8',
  '54',
  5,
  '56'
);

console.log(`Is valid: ${validationResult.isValid}`);
console.log(`Reason: ${validationResult.reason}`);
```
  </UsageExample>
</Interface>
