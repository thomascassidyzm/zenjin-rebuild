<?xml version="1.0" encoding="UTF-8"?>
<Interface name="LifetimeMetricsManagerInterface" version="1.1.0" module="MetricsSystem">
  <Purpose>
    Defines the contract for the LifetimeMetricsManager component that calculates and manages lifetime metrics across all user sessions.
  </Purpose>
  
  <DataStructures>
    <Structure name="LifetimeMetrics">
      <Field name="userId" type="string" required="true" description="User identifier" />
      <Field name="totalSessions" type="number" required="true" description="Total number of completed sessions" />
      <Field name="totalPoints" type="number" required="true" description="Cumulative points across all sessions" />
      <Field name="currentBlinkSpeed" type="number" required="true" description="User's current BlinkSpeed performance in milliseconds" />
      <Field name="evolution" type="number" required="true" description="Evolution metric (Total Points / Blink Speed)" />
      <Field name="firstSessionDate" type="string" required="false" description="ISO date string of first session" />
      <Field name="lastSessionDate" type="string" required="false" description="ISO date string of last session" />
      <Field name="streakDays" type="number" required="false" description="Current streak in days" defaultValue="0" />
      <Field name="longestStreakDays" type="number" required="false" description="Longest streak in days" defaultValue="0" />
    </Structure>
    
    <Structure name="GlobalRanking">
      <Field name="userId" type="string" required="true" description="User identifier" />
      <Field name="percentile" type="number" required="true" description="Percentile ranking (0-100)" />
      <Field name="rank" type="number" required="true" description="Numerical rank" />
      <Field name="totalUsers" type="number" required="true" description="Total number of users" />
      <Field name="calculationDate" type="string" required="true" description="ISO date string of ranking calculation" />
      <Field name="metric" type="string" required="false" description="Metric used for ranking" defaultValue="evolution" />
    </Structure>
  </DataStructures>
  
  <Methods>
    <Method name="getLifetimeMetrics">
      <Description>Gets lifetime metrics for a user</Description>
      <Input name="userId" type="string" required="true" description="User identifier" />
      <Output name="metrics" type="LifetimeMetrics" description="Lifetime metrics for the user" />
      <Errors>
        <Error code="USER_NOT_FOUND" description="The specified user was not found" />
        <Error code="NO_METRICS_DATA" description="No metrics data exists for this user" />
      </Errors>
      <Async>false</Async>
    </Method>
    
    <Method name="updateLifetimeMetrics">
      <Description>Updates lifetime metrics based on session results</Description>
      <Input name="userId" type="string" required="true" description="User identifier" />
      <Input name="sessionSummary" type="object" required="true" description="Session summary data">
        <Field name="sessionId" type="string" required="true" description="Session identifier" />
        <Field name="ftcPoints" type="number" required="true" description="First-time correct points" />
        <Field name="ecPoints" type="number" required="true" description="Eventually correct points" />
        <Field name="basePoints" type="number" required="true" description="Base points" />
        <Field name="bonusMultiplier" type="number" required="true" description="Bonus multiplier" />
        <Field name="blinkSpeed" type="number" required="true" description="Blink speed in milliseconds" />
        <Field name="totalPoints" type="number" required="true" description="Total points" />
      </Input>
      <Output name="updatedMetrics" type="LifetimeMetrics" description="Updated lifetime metrics" />
      <Errors>
        <Error code="USER_NOT_FOUND" description="The specified user was not found" />
        <Error code="INVALID_SESSION_SUMMARY" description="The session summary is invalid" />
        <Error code="UPDATE_FAILED" description="Failed to update lifetime metrics" />
      </Errors>
      <Async>false</Async>
    </Method>
    
    <Method name="calculateEvolution">
      <Description>Calculates the Evolution metric for a user</Description>
      <Input name="userId" type="string" required="true" description="User identifier" />
      <Output name="evolution" type="number" description="Evolution metric value" />
      <Errors>
        <Error code="USER_NOT_FOUND" description="The specified user was not found" />
        <Error code="NO_METRICS_DATA" description="No metrics data exists for this user" />
        <Error code="CALCULATION_FAILED" description="Failed to calculate Evolution metric" />
      </Errors>
      <Async>false</Async>
    </Method>
    
    <Method name="getGlobalRanking">
      <Description>Gets global ranking information for a user</Description>
      <Input name="userId" type="string" required="true" description="User identifier" />
      <Output name="ranking" type="GlobalRanking" description="Global ranking information" />
      <Errors>
        <Error code="USER_NOT_FOUND" description="The specified user was not found" />
        <Error code="NO_RANKING_DATA" description="No ranking data exists for this user" />
      </Errors>
      <Async>false</Async>
    </Method>
    
    <Method name="getTopRankedUsers">
      <Description>Gets a list of top-ranked users</Description>
      <Input name="limit" type="number" required="false" description="Maximum number of users to return" defaultValue="10" />
      <Input name="metric" type="string" required="false" description="Metric to rank by" defaultValue="evolution" />
      <Output name="users" type="object[]" description="Array of top-ranked users">
        <Field name="userId" type="string" description="User identifier" />
        <Field name="rank" type="number" description="Numerical rank" />
        <Field name="metricValue" type="number" description="Value of the ranking metric" />
      </o>
      <Errors>
        <Error code="INVALID_LIMIT" description="The specified limit is invalid" />
        <Error code="INVALID_METRIC" description="The specified metric is invalid" />
      </Errors>
      <Async>false</Async>
    </Method>
  </Methods>
  
  <Dependencies>
    <Dependency interface="MetricsCalculatorInterface" module="MetricsSystem" />
    <Dependency interface="MetricsStorageInterface" module="MetricsSystem" />
  </Dependencies>
  
  <UsageExample>
```typescript
// Example usage of LifetimeMetricsManagerInterface
import { LifetimeMetricsManager } from './components/LifetimeMetricsManager';

// Create lifetime metrics manager
const lifetimeMetricsManager = new LifetimeMetricsManager();

// Get lifetime metrics for a user
const metrics = lifetimeMetricsManager.getLifetimeMetrics('user123');
console.log(`Total sessions: ${metrics.totalSessions}`);
console.log(`Total points: ${metrics.totalPoints}`);
console.log(`Current blink speed: ${metrics.currentBlinkSpeed} ms`);
console.log(`Evolution: ${metrics.evolution}`);

// Update lifetime metrics based on session results
const updatedMetrics = lifetimeMetricsManager.updateLifetimeMetrics('user123', {
  sessionId: 'session123',
  ftcPoints: 80,
  ecPoints: 9,
  basePoints: 89,
  bonusMultiplier: 1.25,
  blinkSpeed: 15000,
  totalPoints: 111.25
});

console.log(`Updated total points: ${updatedMetrics.totalPoints}`);
console.log(`Updated evolution: ${updatedMetrics.evolution}`);

// Calculate evolution metric
const evolution = lifetimeMetricsManager.calculateEvolution('user123');
console.log(`Evolution: ${evolution}`);

// Get global ranking
const ranking = lifetimeMetricsManager.getGlobalRanking('user123');
console.log(`Percentile: ${ranking.percentile}%`);
console.log(`Rank: ${ranking.rank} of ${ranking.totalUsers}`);

// Get top-ranked users
const topUsers = lifetimeMetricsManager.getTopRankedUsers(5, 'evolution');
topUsers.forEach((user, index) => {
  console.log(`#${user.rank}: User ${user.userId} - Evolution: ${user.metricValue}`);
});
```
  </UsageExample>
</Interface>
