<?xml version="1.0" encoding="UTF-8"?>
<Interface name="TripleHelixManagerInterface" version="1.1.0" module="ProgressionSystem">
  <Purpose>
    Defines the contract for the TripleHelixManager component that manages three parallel learning paths and their rotation according to the Live Aid Stage Model.
  </Purpose>
  
  <DataStructures>
    <Structure name="LearningPath">
      <Field name="id" type="string" required="true" description="Unique identifier for the learning path" />
      <Field name="name" type="string" required="true" description="Name of the learning path" />
      <Field name="description" type="string" required="false" description="Description of the learning path" />
      <Field name="currentStitchId" type="string" required="false" description="ID of the currently active stitch in this path" />
      <Field name="nextStitchId" type="string" required="false" description="ID of the next stitch to be presented in this path" />
      <Field name="difficulty" type="number" required="true" description="Current difficulty level of the path (1-5)" />
      <Field name="status" type="string" required="true" description="Status of the path ('active', 'preparing', 'inactive')" />
      <Field name="metadata" type="object" required="false" description="Additional metadata for the learning path" />
    </Structure>
    
    <Structure name="TripleHelixState">
      <Field name="userId" type="string" required="true" description="User identifier" />
      <Field name="activePath" type="LearningPath" required="true" description="Currently active learning path" />
      <Field name="preparingPaths" type="LearningPath[]" required="true" description="Learning paths being prepared" />
      <Field name="lastRotationTime" type="string" required="false" description="ISO date string of last rotation" />
      <Field name="rotationCount" type="number" required="true" description="Number of rotations performed" />
    </Structure>
  </DataStructures>
  
  <Methods>
    <Method name="getActiveLearningPath">
      <Description>Gets the currently active learning path for a user</Description>
      <Input name="userId" type="string" required="true" description="User identifier" />
      <Output name="learningPath" type="LearningPath" description="The active learning path" />
      <Errors>
        <Error code="USER_NOT_FOUND" description="The specified user was not found" />
        <Error code="NO_ACTIVE_PATH" description="No active learning path exists for this user" />
      </Errors>
      <Async>false</Async>
    </Method>
    
    <Method name="getPreparingPaths">
      <Description>Gets the learning paths being prepared for a user</Description>
      <Input name="userId" type="string" required="true" description="User identifier" />
      <Output name="preparingPaths" type="LearningPath[]" description="Array of learning paths being prepared" />
      <Errors>
        <Error code="USER_NOT_FOUND" description="The specified user was not found" />
      </Errors>
      <Async>false</Async>
    </Method>
    
    <Method name="rotateLearningPaths">
      <Description>Rotates the learning paths, making a prepared path active</Description>
      <Input name="userId" type="string" required="true" description="User identifier" />
      <Output name="result" type="object" description="Result of the rotation operation">
        <Field name="previousActivePath" type="LearningPath" description="Previously active learning path" />
        <Field name="newActivePath" type="LearningPath" description="New active learning path" />
        <Field name="rotationCount" type="number" description="Updated rotation count" />
      </Output>
      <Errors>
        <Error code="USER_NOT_FOUND" description="The specified user was not found" />
        <Error code="NO_TRIPLE_HELIX" description="No triple helix exists for this user" />
        <Error code="ROTATION_FAILED" description="Failed to rotate learning paths" />
      </Errors>
      <Async>false</Async>
    </Method>
    
    <Method name="initializeTripleHelix">
      <Description>Sets up the initial learning paths for a new user</Description>
      <Input name="userId" type="string" required="true" description="User identifier" />
      <Input name="initialDifficulty" type="number" required="false" description="Initial difficulty level (1-5)" defaultValue="1" />
      <Output name="tripleHelixState" type="TripleHelixState" description="Initial triple helix state" />
      <Errors>
        <Error code="USER_NOT_FOUND" description="The specified user was not found" />
        <Error code="ALREADY_INITIALIZED" description="Triple helix already initialized for this user" />
        <Error code="INITIALIZATION_FAILED" description="Failed to initialize triple helix" />
      </Errors>
      <Async>false</Async>
    </Method>
    
    <Method name="getTripleHelixState">
      <Description>Gets the current triple helix state for a user</Description>
      <Input name="userId" type="string" required="true" description="User identifier" />
      <Output name="state" type="TripleHelixState" description="Current triple helix state" />
      <Errors>
        <Error code="USER_NOT_FOUND" description="The specified user was not found" />
        <Error code="NO_TRIPLE_HELIX" description="No triple helix exists for this user" />
      </Errors>
      <Async>false</Async>
    </Method>
    
    <Method name="updateLearningPathDifficulty">
      <Description>Updates the difficulty of a specific learning path</Description>
      <Input name="userId" type="string" required="true" description="User identifier" />
      <Input name="pathId" type="string" required="true" description="Learning path identifier" />
      <Input name="newDifficulty" type="number" required="true" description="New difficulty level (1-5)" />
      <Output name="updatedPath" type="LearningPath" description="Updated learning path" />
      <Errors>
        <Error code="USER_NOT_FOUND" description="The specified user was not found" />
        <Error code="PATH_NOT_FOUND" description="The specified learning path was not found" />
        <Error code="INVALID_DIFFICULTY" description="The specified difficulty is invalid" />
      </Errors>
      <Async>false</Async>
    </Method>
  </Methods>
  
  <Dependencies>
    <Dependency interface="StitchManagerInterface" module="ProgressionSystem" />
  </Dependencies>
  
  <UsageExample>
```typescript
// Example usage of TripleHelixManagerInterface
import { TripleHelixManager } from './components/TripleHelixManager';

// Create triple helix manager
const tripleHelixManager = new TripleHelixManager();

// Initialize triple helix for a new user
const initialState = tripleHelixManager.initializeTripleHelix('user123', 2);
console.log(`Active path: ${initialState.activePath.name}`);
console.log(`Preparing paths: ${initialState.preparingPaths.length}`);

// Get active learning path
const activePath = tripleHelixManager.getActiveLearningPath('user123');
console.log(`Active path: ${activePath.name}`);
console.log(`Current stitch: ${activePath.currentStitchId}`);
console.log(`Difficulty: ${activePath.difficulty}`);

// Get preparing paths
const preparingPaths = tripleHelixManager.getPreparingPaths('user123');
preparingPaths.forEach((path, index) => {
  console.log(`Preparing path ${index + 1}: ${path.name}`);
  console.log(`Next stitch: ${path.nextStitchId}`);
});

// Rotate learning paths
const rotationResult = tripleHelixManager.rotateLearningPaths('user123');
console.log(`Previous active: ${rotationResult.previousActivePath.name}`);
console.log(`New active: ${rotationResult.newActivePath.name}`);
console.log(`Rotation count: ${rotationResult.rotationCount}`);

// Update learning path difficulty
const updatedPath = tripleHelixManager.updateLearningPathDifficulty(
  'user123',
  activePath.id,
  3
);
console.log(`Updated difficulty: ${updatedPath.difficulty}`);
```
  </UsageExample>
</Interface>
