<?xml version="1.0" encoding="UTF-8"?>
<Interface name="ThemeManagerInterface" version="1.1.0" module="UserInterface">
  <Purpose>
    Defines the contract for the ThemeManager component that manages the visual theme of the application, including colors, animations, and styling.
  </Purpose>
  
  <DataStructures>
    <Structure name="ThemeColors">
      <Field name="primary" type="string" required="true" description="Primary color (hex code)" />
      <Field name="secondary" type="string" required="true" description="Secondary color (hex code)" />
      <Field name="background" type="string" required="true" description="Background color (hex code)" />
      <Field name="text" type="string" required="true" description="Text color (hex code)" />
      <Field name="accent" type="string" required="false" description="Accent color (hex code)" />
      <Field name="success" type="string" required="false" description="Success color (hex code)" />
      <Field name="error" type="string" required="false" description="Error color (hex code)" />
      <Field name="neutral" type="string" required="false" description="Neutral color (hex code)" />
    </Structure>
    
    <Structure name="ThemeAnimation">
      <Field name="enabled" type="boolean" required="true" description="Whether animations are enabled" />
      <Field name="speed" type="number" required="false" description="Animation speed multiplier (1.0 is normal)" defaultValue="1.0" />
      <Field name="bubblesDensity" type="number" required="false" description="Density of background bubbles animation" defaultValue="0.5" />
      <Field name="bubblesSpeed" type="number" required="false" description="Speed of background bubbles animation" defaultValue="1.0" />
    </Structure>
    
    <Structure name="ThemeConfig">
      <Field name="colors" type="ThemeColors" required="true" description="Theme color configuration" />
      <Field name="animation" type="ThemeAnimation" required="true" description="Theme animation configuration" />
      <Field name="fontFamily" type="string" required="false" description="Primary font family" defaultValue="'Inter', sans-serif" />
      <Field name="borderRadius" type="number" required="false" description="Border radius for UI elements in pixels" defaultValue="8" />
      <Field name="spacing" type="number" required="false" description="Base spacing unit in pixels" defaultValue="4" />
    </Structure>
  </DataStructures>
  
  <Methods>
    <Method name="applyTheme">
      <Description>Applies a theme configuration to the application</Description>
      <Input name="config" type="ThemeConfig" required="true" description="The theme configuration to apply" />
      <Output name="success" type="boolean" description="Whether the theme was successfully applied" />
      <Errors>
        <Error code="INVALID_CONFIG" description="The theme configuration is invalid" />
        <Error code="THEME_APPLICATION_FAILED" description="Failed to apply the theme" />
      </Errors>
      <Async>false</Async>
    </Method>
    
    <Method name="getThemeConfig">
      <Description>Gets the current theme configuration</Description>
      <Output name="config" type="ThemeConfig" description="The current theme configuration" />
      <Errors>
        <Error code="NO_ACTIVE_THEME" description="No active theme configuration found" />
      </Errors>
      <Async>false</Async>
    </Method>
    
    <Method name="getThemeProperty">
      <Description>Gets a specific theme property value</Description>
      <Input name="propertyPath" type="string" required="true" description="Path to the property (e.g., 'colors.primary', 'animation.speed')" />
      <Output name="value" type="any" description="The value of the specified property" />
      <Errors>
        <Error code="INVALID_PROPERTY_PATH" description="The property path is invalid" />
        <Error code="PROPERTY_NOT_FOUND" description="The specified property was not found" />
      </Errors>
      <Async>false</Async>
    </Method>
    
    <Method name="startBackgroundAnimation">
      <Description>Starts the background bubbles animation</Description>
      <Input name="options" type="object" required="false" description="Animation options">
        <Field name="density" type="number" required="false" description="Bubble density" />
        <Field name="speed" type="number" required="false" description="Animation speed" />
      </Input>
      <Output name="success" type="boolean" description="Whether the animation was successfully started" />
      <Errors>
        <Error code="ANIMATION_START_FAILED" description="Failed to start the animation" />
      </Errors>
      <Async>false</Async>
    </Method>
    
    <Method name="stopBackgroundAnimation">
      <Description>Stops the background bubbles animation</Description>
      <Output name="success" type="boolean" description="Whether the animation was successfully stopped" />
      <Errors>
        <Error code="ANIMATION_STOP_FAILED" description="Failed to stop the animation" />
        <Error code="NO_ACTIVE_ANIMATION" description="No active animation to stop" />
      </Errors>
      <Async>false</Async>
    </Method>
    
    <Method name="getCSSVariables">
      <Description>Gets CSS variables for the current theme</Description>
      <Output name="cssVariables" type="object" description="Object containing CSS variable names and values" />
      <Errors>
        <Error code="NO_ACTIVE_THEME" description="No active theme configuration found" />
      </Errors>
      <Async>false</Async>
    </Method>
  </Methods>
  
  <Dependencies>
    <!-- No external dependencies -->
  </Dependencies>
  
  <UsageExample>
```typescript
// Example usage of ThemeManagerInterface
import { ThemeManager } from './components/ThemeManager';

// Create theme manager
const themeManager = new ThemeManager();

// Apply a theme
themeManager.applyTheme({
  colors: {
    primary: '#3B82F6',
    secondary: '#10B981',
    background: '#111827',
    text: '#F3F4F6',
    accent: '#8B5CF6',
    success: '#34D399',
    error: '#EF4444',
    neutral: '#6B7280'
  },
  animation: {
    enabled: true,
    speed: 1.0,
    bubblesDensity: 0.6,
    bubblesSpeed: 0.8
  },
  fontFamily: "'Inter', sans-serif",
  borderRadius: 8,
  spacing: 4
});

// Start background animation
themeManager.startBackgroundAnimation({
  density: 0.7,
  speed: 0.9
});

// Get a specific theme property
const primaryColor = themeManager.getThemeProperty('colors.primary');
console.log(`Primary color: ${primaryColor}`);

// Get CSS variables for use in styled components
const cssVars = themeManager.getCSSVariables();
console.log(cssVars);
```
  </UsageExample>
</Interface>
